AWSTemplateFormatVersion: '2010-09-09'
Description: Static single-page app on S3 behind CloudFront (OAC). Includes SPA-friendly error handling and outputs distribution domain.

Parameters:
  BucketName:
    Type: String
    Description: Name for the S3 bucket to host the site content. Must be globally unique.
  PriceClass:
    Type: String
    Default: PriceClass_100
    AllowedValues: [PriceClass_100, PriceClass_200, PriceClass_All]
    Description: CloudFront price class.
  Aliases:
    Type: CommaDelimitedList
    Default: ''
    Description: Optional alternate domain names (e.g. example.com,www.example.com). Leave empty to skip.
  AcmCertificateArn:
    Type: String
    Default: ''
    Description: ACM certificate ARN in us-east-1 for the aliases. Leave empty to use default *.cloudfront.net cert.

Conditions:
  HasAliases: !Not [!Equals [!Join ['', !Ref Aliases], '']]
  HasCert: !Not [!Equals [!Ref AcmCertificateArn, '']]
  UseAliasesAndCert: !And [!Condition HasAliases, !Condition HasCert]

Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Suspended
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipalReadOnly
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: ['s3:GetObject']
            Resource: !Sub '${SiteBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      Name: !Sub '${AWS::StackName}-oac'
      Description: Access S3 bucket privately via OAC
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2and3
        PriceClass: !Ref PriceClass
        Aliases: !If [UseAliasesAndCert, !Ref Aliases, !Ref 'AWS::NoValue']
        ViewerCertificate: !If
          - UseAliasesAndCert
          - AcmCertificateArn: !Ref AcmCertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true
        Origins:
          - Id: s3-origin
            DomainName: !GetAtt SiteBucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !Ref CloudFrontOAC
        DefaultCacheBehavior:
          TargetOriginId: s3-origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD]
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6   # Managed-CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # Managed-CORS-S3Origin
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

Outputs:
  BucketNameOut:
    Description: S3 bucket name
    Value: !Ref SiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  DistributionIdOut:
    Description: CloudFront Distribution Id
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'
  DistributionDomainNameOut:
    Description: CloudFront Distribution domain name
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-DistributionDomainName'


